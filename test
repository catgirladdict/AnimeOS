boot/boot.c:45:6: warning: implicit declaration of function 'EFI_ERROR' is invalid in C99 [-Wimplicit-function-declaration]
        if (EFI_ERROR(status)) {
            ^
boot/boot.c:46:3: warning: implicit declaration of function 'Print' is invalid in C99 [-Wimplicit-function-declaration]
                Print(L"%s failed: %r\r\n", name, status);
                ^
boot/boot.c:52:38: error: use of undeclared identifier 'NULL'
        EFI_MEMORY_DESCRIPTOR *memory_map = NULL;
                                            ^
boot/boot.c:58:11: error: use of undeclared identifier 'BS'
        status = BS->GetMemoryMap(&memory_map_size, memory_map, &map_key, &descriptor_size, &version);
                 ^
boot/boot.c:60:3: warning: implicit declaration of function 'Print' is invalid in C99 [-Wimplicit-function-declaration]
                Print(L"First call to memory map succeeded (memory map is empty?)", 2);
                ^
boot/boot.c:64:18: error: use of undeclared identifier 'NULL'
                void *buffer = NULL;
                               ^
boot/boot.c:65:12: error: use of undeclared identifier 'BS'
                status = BS->AllocatePool(EfiLoaderData, correct_size, &buffer);
                         ^
boot/boot.c:70:13: error: use of undeclared identifier 'BS'
                        status = BS->GetMemoryMap(&memory_map_size, memory_map, &map_key, &descriptor_size, &version);
                                 ^
boot/boot.c:89:5: warning: implicit declaration of function 'Print' is invalid in C99 [-Wimplicit-function-declaration]
                                Print(L"Second GetMemoryMap call failed.", 2);
                                ^
boot/boot.c:92:4: warning: implicit declaration of function 'Print' is invalid in C99 [-Wimplicit-function-declaration]
                        Print(L"AllocatePool call failed", 0);
                        ^
boot/boot.c:95:3: warning: implicit declaration of function 'Print' is invalid in C99 [-Wimplicit-function-declaration]
                Print(L"First GetMemoryMap call failed.", 2);
                ^
boot/boot.c:97:9: error: use of undeclared identifier 'NULL'
        return NULL;;
               ^
boot/boot.c:102:2: warning: implicit declaration of function 'InitializeLib' is invalid in C99 [-Wimplicit-function-declaration]
        InitializeLib(image_handle, systab);
        ^
boot/boot.c:105:11: warning: implicit declaration of function 'uefi_call_wrapper' is invalid in C99 [-Wimplicit-function-declaration]
        status = uefi_call_wrapper(ST->ConOut->ClearScreen, 2, ST->ConOut);
                 ^
boot/boot.c:105:29: error: use of undeclared identifier 'ST'
        status = uefi_call_wrapper(ST->ConOut->ClearScreen, 2, ST->ConOut);
                                   ^
boot/boot.c:105:57: error: use of undeclared identifier 'ST'
        status = uefi_call_wrapper(ST->ConOut->ClearScreen, 2, ST->ConOut);
                                                               ^
boot/boot.c:109:29: error: use of undeclared identifier 'BS'
        status = uefi_call_wrapper(BS->SetWatchdogTimer, 4, 0, 0, 0, NULL);
                                   ^
boot/boot.c:109:63: error: use of undeclared identifier 'NULL'
        status = uefi_call_wrapper(BS->SetWatchdogTimer, 4, 0, 0, 0, NULL);
                                                                     ^
boot/boot.c:113:2: error: unknown type name 'EFI_LOADED_IMAGE_PROTOCOL'; did you mean 'EFI_LOCATE_PROTOCOL'?
        EFI_LOADED_IMAGE_PROTOCOL *loaded_image;
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        EFI_LOCATE_PROTOCOL
efi/efi-bs.h:121:22: note: 'EFI_LOCATE_PROTOCOL' declared here
typedef EFI_STATUS (*EFI_LOCATE_PROTOCOL)(EFI_GUID *Protocol, VOID *Registration, VOID **Interface);
                     ^
boot/boot.c:114:21: error: use of undeclared identifier 'EFI_LOADED_IMAGE_PROTOCOL_GUID'
        EFI_GUID li_guid = EFI_LOADED_IMAGE_PROTOCOL_GUID;
                           ^
boot/boot.c:115:29: error: use of undeclared identifier 'ST'
        status = uefi_call_wrapper(ST->BootServices->OpenProtocol, 6, image_handle, &li_guid, (void**)&loaded_image, image_handle, NULL, EFI_OPEN_PROTOCOL_GET_PROTOCOL);
                                   ^
boot/boot.c:115:125: error: use of undeclared identifier 'NULL'
        status = uefi_call_wrapper(ST->BootServices->OpenProtocol, 6, image_handle, &li_guid, (void**)&loaded_image, image_handle, NULL, EFI_OPEN_PROTOCOL_GET_PROTOCOL);
                                                                                                                                   ^
boot/boot.c:118:2: error: use of undeclared identifier 'EFI_SIMPLE_FILE_SYSTEM_PROTOCOL'
        EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *sfs;
        ^
boot/boot.c:118:35: error: use of undeclared identifier 'sfs'
        EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *sfs;
                                         ^
boot/boot.c:119:22: error: use of undeclared identifier 'EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID'
        EFI_GUID sfs_guid = EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID;
                            ^
boot/boot.c:120:76: error: member reference base type 'EFI_LOCATE_PROTOCOL' (aka 'unsigned long long (*)(struct EFI_GUID *, void *, void **)') is not a structure or union
        status = uefi_call_wrapper(ST->BootServices->OpenProtocol, 6, loaded_image->DeviceHandle, &sfs_guid, (void**)&sfs, image_handle, NULL, EFI_OPEN_PROTOCOL_GET_PROTOCOL);
                                                                      ~~~~~~~~~~~~^ ~~~~~~~~~~~~
boot/boot.c:120:112: error: use of undeclared identifier 'sfs'
        status = uefi_call_wrapper(ST->BootServices->OpenProtocol, 6, loaded_image->DeviceHandle, &sfs_guid, (void**)&sfs, image_handle, NULL, EFI_OPEN_PROTOCOL_GET_PROTOCOL);
                                                                                                                      ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
8 warnings and 20 errors generated.
